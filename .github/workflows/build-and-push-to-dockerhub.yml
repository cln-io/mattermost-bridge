name: Build and Push Docker Image

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: clnio/mattermost-bridge  # Change this to your Docker Hub repo

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build TypeScript
        run: npm run build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            # Set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            # Set version tag for tags
            type=ref,event=tag
            # Set branch name for branches
            type=ref,event=branch
            # Set SHA prefix for all builds
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # - name: Update Docker Hub Description
      #   uses: peter-evans/dockerhub-description@v4
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_PAT }}
      #     repository: ${{ env.IMAGE_NAME }}
      #     readme-filepath: ./DOCKERHUB.md

      - name: Create Release (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          body: |
            Docker image: `${{ env.IMAGE_NAME }}:${{ github.ref_name }}`
            
            Pull the image:
            ```bash
            docker pull ${{ env.IMAGE_NAME }}:${{ github.ref_name }}
            ```
            
            Run with environment file:
            ```bash
            docker run --env-file .env ${{ env.IMAGE_NAME }}:${{ github.ref_name }}
            ```
            
            This release supports both AMD64 and ARM64 architectures.
          draft: false
          prerelease: false
